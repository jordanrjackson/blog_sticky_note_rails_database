{"ast":null,"code":"import _toConsumableArray from \"/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from \"axios\";\nvar BLOGS = \"BLOGS\";\nvar ADD_BLOG = \"ADD_BLOG\";\nvar UPDATE_BLOG = \"UPDATE_BLOG\";\nvar DELETE_BLOG = \"DELETE_BLOG\"; // REDUX ACTIONS\n\nexport var getBlogs = function getBlogs() {\n  return function (dispatch) {\n    axios.get(\"/api/blogs\").then(function (res) {\n      return dispatch({\n        type: BLOGS,\n        blogs: res.data\n      });\n    }).then(cb());\n  };\n};\nexport var addBlog = function addBlog(blog) {\n  return function (dispatch) {\n    axios.post(\"/api/blogs\", {\n      blog: blog\n    }).then(function (res) {\n      return dispatch({\n        type: ADD_BLOG,\n        blog: res.data\n      });\n    });\n  };\n};\nexport var updateBlog = function updateBlog(blog) {\n  return function (dispatch) {\n    axios.put(\"/api/blogs/\".concat(blog.id), {\n      blog: blog\n    }).then(function (res) {\n      return dispatch({\n        type: UPDATE_BLOG,\n        blog: res.data\n      });\n    });\n  };\n};\nexport var deleteBlog = function deleteBlog(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/blogs/\".concat(id)).then(function () {\n      return dispatch({\n        type: DELETE_BLOG,\n        id: id\n      });\n    });\n  };\n}; // REDUX REDUCER\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case BLOGS:\n      return action.blogs;\n\n    case ADD_BLOG:\n      return [action.blog].concat(_toConsumableArray(state));\n\n    case UPDATE_BLOG:\n      return state.map(function (a) {\n        if (a.id === action.blog.id) return action.blog;\n        return a;\n      });\n\n    case DELETE_BLOG:\n      return state.filter(function (a) {\n        return a.id !== action.id;\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/src/reducers/blogs.js"],"names":["axios","BLOGS","ADD_BLOG","UPDATE_BLOG","DELETE_BLOG","getBlogs","dispatch","get","then","res","type","blogs","data","cb","addBlog","blog","post","updateBlog","put","id","deleteBlog","delete","state","action","map","a","filter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG,OAAd;AACA,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,WAAW,GAAG,aAApB;AACA,IAAMC,WAAW,GAAG,aAApB,C,CAEA;;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,SAAO,UAACC,QAAD,EAAc;AACnBN,IAAAA,KAAK,CAACO,GAAN,CAAU,YAAV,EACGC,IADH,CACS,UAAAC,GAAG;AAAA,aAAIH,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAET,KAAR;AAAeU,QAAAA,KAAK,EAAEF,GAAG,CAACG;AAA1B,OAAD,CAAZ;AAAA,KADZ,EAEGJ,IAFH,CAESK,EAAE,EAFX;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC/B,SAAO,UAACT,QAAD,EAAc;AACnBN,IAAAA,KAAK,CAACgB,IAAN,CAAW,YAAX,EAAyB;AAAED,MAAAA,IAAI,EAAJA;AAAF,KAAzB,EACGP,IADH,CACS,UAAAC,GAAG;AAAA,aAAIH,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAER,QAAR;AAAkBa,QAAAA,IAAI,EAAEN,GAAG,CAACG;AAA5B,OAAD,CAAZ;AAAA,KADZ;AAED,GAHD;AAID,CALM;AAOP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACF,IAAD,EAAU;AAClC,SAAO,UAACT,QAAD,EAAc;AACnBN,IAAAA,KAAK,CAACkB,GAAN,sBAAwBH,IAAI,CAACI,EAA7B,GAAmC;AAAEJ,MAAAA,IAAI,EAAJA;AAAF,KAAnC,EACGP,IADH,CACS,UAAAC,GAAG;AAAA,aAAIH,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEP,WAAR;AAAqBY,QAAAA,IAAI,EAAEN,GAAG,CAACG;AAA/B,OAAD,CAAZ;AAAA,KADZ;AAED,GAHD;AAID,CALM;AAOP,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACD,EAAD,EAAQ;AAChC,SAAO,UAACb,QAAD,EAAc;AACnBN,IAAAA,KAAK,CAACqB,MAAN,sBAA2BF,EAA3B,GACGX,IADH,CACS;AAAA,aAAMF,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEN,WAAR;AAAqBe,QAAAA,EAAE,EAAFA;AAArB,OAAD,CAAd;AAAA,KADT;AAED,GAHD;AAID,CALM,C,CAOP;;AAEA,gBAAe,YAA0B;AAAA,MAAzBG,KAAyB,uEAAjB,EAAiB;AAAA,MAAbC,MAAa;;AACvC,UAAOA,MAAM,CAACb,IAAd;AACE,SAAKT,KAAL;AACE,aAAOsB,MAAM,CAACZ,KAAd;;AACF,SAAKT,QAAL;AACE,cAAQqB,MAAM,CAACR,IAAf,4BAAwBO,KAAxB;;AACF,SAAKnB,WAAL;AACE,aAAOmB,KAAK,CAACE,GAAN,CAAW,UAAAC,CAAC,EAAI;AACrB,YAAIA,CAAC,CAACN,EAAF,KAASI,MAAM,CAACR,IAAP,CAAYI,EAAzB,EACE,OAAOI,MAAM,CAACR,IAAd;AACD,eAAOU,CAAP;AACF,OAJM,CAAP;;AAKF,SAAKrB,WAAL;AACE,aAAOkB,KAAK,CAACI,MAAN,CAAc,UAAAD,CAAC;AAAA,eAAIA,CAAC,CAACN,EAAF,KAASI,MAAM,CAACJ,EAApB;AAAA,OAAf,CAAP;;AACF;AACE,aAAOG,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["import axios from \"axios\";\n\nconst BLOGS = \"BLOGS\";\nconst ADD_BLOG = \"ADD_BLOG\";\nconst UPDATE_BLOG = \"UPDATE_BLOG\";\nconst DELETE_BLOG = \"DELETE_BLOG\";\n\n// REDUX ACTIONS\n\nexport const getBlogs = () => {\n  return (dispatch) => {\n    axios.get(\"/api/blogs\")\n      .then( res => dispatch({ type: BLOGS, blogs: res.data }) )\n      .then( cb() )\n  }\n}\n\nexport const addBlog = (blog) => {\n  return (dispatch) => {\n    axios.post(\"/api/blogs\", { blog, } )\n      .then( res => dispatch({ type: ADD_BLOG, blog: res.data }) )\n  }\n}\n\nexport const updateBlog = (blog) => {\n  return (dispatch) => {\n    axios.put(`/api/blogs/${blog.id}`, { blog, })\n      .then( res => dispatch({ type: UPDATE_BLOG, blog: res.data, }))\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return (dispatch) => {\n    axios.delete(`/api/blogs/${id}`)\n      .then( () => dispatch({ type: DELETE_BLOG, id }) )\n  }\n}\n\n// REDUX REDUCER\n\nexport default (state = [], action, ) => {\n  switch(action.type) {\n    case BLOGS:\n      return action.blogs\n    case ADD_BLOG:\n      return [action.blog, ...state]\n    case UPDATE_BLOG:\n      return state.map( a => {\n        if (a.id === action.blog.id)\n          return action.blog\n         return a\n      })\n    case DELETE_BLOG:\n      return state.filter( a => a.id !== action.id )\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}