{"ast":null,"code":"import _objectSpread from \"/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/src/components/AccountForm.js\";\nimport React from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { AccountConsumer } from \"../providers/AccountProvider\";\n\nvar AccountForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AccountForm, _React$Component);\n\n  function AccountForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AccountForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AccountForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: _this.props.username,\n      membershipLevel: _this.props.membershipLevel\n    };\n\n    _this.handleChange = function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      return _this.setState()(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var account = _objectSpread({}, _this.state);\n\n      _this.props.updateAccount(account);\n    };\n\n    return _this;\n  }\n\n  _createClass(AccountForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          username = _this$state.username,\n          membershipLevel = _this$state.membershipLevel;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        label: \"New Username\",\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        label: \"Membership Level\",\n        name: \"membershipLevel\",\n        value: membershipLevel,\n        onChange: this.handleChange,\n        options: membershipOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Form.Button, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return AccountForm;\n}(React.Component);\n\nvar membershipOptions = [{\n  key: \"b\",\n  text: \"Bronze\",\n  value: \"Bronze\"\n}, {\n  key: \"s\",\n  text: \"Silver\",\n  value: \"Silver\"\n}, {\n  key: \"g\",\n  text: \"Gold\",\n  value: \"Gold\"\n}, {\n  key: \"p\",\n  text: \"Platinum\",\n  value: \"Platinum\"\n}];\n\nvar ConnectedAccountForm = function ConnectedAccountForm(props) {\n  return React.createElement(AccountConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, function (value) {\n    return React.createElement(AccountForm, Object.assign({}, props, {\n      username: value.username,\n      membershipLevel: value.membershipLevel,\n      updateAccount: value.updateAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default ConnectedAccountForm;","map":{"version":3,"sources":["/Users/jordan/Desktop/dpl_course/week7/day2/blog_sticky_note_rails_database/client/src/components/AccountForm.js"],"names":["React","Form","AccountConsumer","AccountForm","state","username","props","membershipLevel","handleChange","e","name","value","setState","handleSubmit","preventDefault","account","updateAccount","membershipOptions","Component","key","text","ConnectedAccountForm"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAsB,mBAAtB;AACA,SAASC,eAAT,QAAiC,8BAAjC;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWD,QADf;AAENE,MAAAA,eAAe,EAAE,MAAKD,KAAL,CAAWC;AAFtB,K;;UAKRC,Y,GAAe,UAACC,CAAD;AAAA,UAAKC,IAAL,QAAKA,IAAL;AAAA,UAAWC,KAAX,QAAWA,KAAX;AAAA,aAAwB,MAAKC,QAAL,uBAAmBF,IAAnB,EAA0BC,KAA1B,EAAxB;AAAA,K;;UAEfE,Y,GAAe,UAACJ,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACK,cAAF;;AACA,UAAMC,OAAO,qBAAQ,MAAKX,KAAb,CAAb;;AACA,YAAKE,KAAL,CAAWU,aAAX,CAAyBD,OAAzB;AACD,K;;;;;;;6BAEQ;AAAA,wBACgC,KAAKX,KADrC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWE,eADX,eACWA,eADX;AAEP,aACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKM,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAER,QAJT;AAKE,QAAA,QAAQ,EAAE,KAAKG,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,IAAD,CAAM,MAAN;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,IAAI,EAAC,iBAFP;AAGE,QAAA,KAAK,EAAED,eAHT;AAIE,QAAA,QAAQ,EAAE,KAAKC,YAJjB;AAKE,QAAA,OAAO,EAAES,iBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAeE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,CADF;AAmBD;;;;EAnCuBjB,KAAK,CAACkB,S;;AAsChC,IAAMD,iBAAiB,GAAG,CACxB;AAAEE,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,QAAlB;AAA4BT,EAAAA,KAAK,EAAE;AAAnC,CADwB,EAExB;AAAEQ,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,QAAlB;AAA4BT,EAAAA,KAAK,EAAE;AAAnC,CAFwB,EAGxB;AAAEQ,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,MAAlB;AAA0BT,EAAAA,KAAK,EAAE;AAAjC,CAHwB,EAIxB;AAAEQ,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,UAAlB;AAA8BT,EAAAA,KAAK,EAAE;AAArC,CAJwB,CAA1B;;AAOA,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACf,KAAD,EAAW;AACtC,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,UAAAK,KAAK;AAAA,WACL,oBAAC,WAAD,oBACOL,KADP;AAEE,MAAA,QAAQ,EAAEK,KAAK,CAACN,QAFlB;AAGE,MAAA,eAAe,EAAEM,KAAK,CAACJ,eAHzB;AAIE,MAAA,aAAa,EAAEI,KAAK,CAACK,aAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADK;AAAA,GADT,CADF;AAYD,CAbD;;AAeA,eAAeK,oBAAf","sourcesContent":["import React from \"react\";\nimport { Form, } from \"semantic-ui-react\";\nimport { AccountConsumer, } from \"../providers/AccountProvider\";\n\nclass AccountForm extends React.Component {\n  state = {\n    username: this.props.username,\n    membershipLevel: this.props.membershipLevel,\n  };\n\n  handleChange = (e, {name, value, }) => this.setState()({ [name]: value, });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const account = { ...this.state, };\n    this.props.updateAccount(account);\n  }\n\n  render() {\n    const { username, membershipLevel, } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Input\n          label=\"New Username\"\n          type=\"text\"\n          name=\"username\"\n          value={username}\n          onChange={this.handleChange}\n        />\n        <Form.Select\n          label=\"Membership Level\"\n          name=\"membershipLevel\"\n          value={membershipLevel}\n          onChange={this.handleChange}\n          options={membershipOptions}\n        />\n        <Form.Button color=\"blue\">Save</Form.Button>\n      </Form>\n    )\n  }\n}\n\nconst membershipOptions = [\n  { key: \"b\", text: \"Bronze\", value: \"Bronze\", },\n  { key: \"s\", text: \"Silver\", value: \"Silver\", },\n  { key: \"g\", text: \"Gold\", value: \"Gold\", },\n  { key: \"p\", text: \"Platinum\", value: \"Platinum\", },\n];\n\nconst ConnectedAccountForm = (props) => {\n  return (\n    <AccountConsumer>\n      { value => (\n        <AccountForm\n          { ...props }\n          username={value.username}\n          membershipLevel={value.membershipLevel}\n          updateAccount={value.updateAccount}\n        />\n      )}\n    </AccountConsumer>\n  )\n}\n\nexport default ConnectedAccountForm;"]},"metadata":{},"sourceType":"module"}